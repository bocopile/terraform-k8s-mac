configs:
  secret:
    # admin
    argocdServerAdminPassword: $2y$12$2btfod59SWVmV09TuHabu.1j8Xq7kD3Pn7wF0zW9deziF0zHW9Soa

# High Availability: Controller 고가용성 설정
controller:
  replicas: 2
  # Security: SecurityContext 설정
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: application-controller
            topologyKey: kubernetes.io/hostname
  pdb:
    enabled: true
    minAvailable: 1

server:
  # High Availability: Server 고가용성 설정
  replicas: 2
  # Security: SecurityContext 설정
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  autoscaling:
    enabled: false
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: server
            topologyKey: kubernetes.io/hostname
  pdb:
    enabled: true
    minAvailable: 1
  ingress:
    enabled: false
  service:
    type: ClusterIP  # ISTIO_EXPOSE=on 모드에서 Istio Ingress Gateway를 통해 노출
  # Istio Gateway를 통해 HTTP로 노출하기 위한 insecure 모드 설정
  extraArgs:
    - --insecure

# High Availability: Repo Server 고가용성 설정
repoServer:
  replicas: 2
  # Security: SecurityContext 설정
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: repo-server
            topologyKey: kubernetes.io/hostname
  pdb:
    enabled: true
    minAvailable: 1

# High Availability: Application Set Controller 고가용성
applicationSet:
  replicas: 2
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: applicationset-controller
            topologyKey: kubernetes.io/hostname
  pdb:
    enabled: true
    minAvailable: 1

# Data Persistence: Redis 데이터 영속성
redis:
  enabled: true
  persistence:
    enabled: true
    size: 8Gi
    storageClassName: local-path
    accessMode: ReadWriteOnce

# Data Persistence: Controller 데이터 영속성
controller:
  volumes:
    - name: app-controller-data
      persistentVolumeClaim:
        claimName: argocd-controller-data
  volumeMounts:
    - name: app-controller-data
      mountPath: /home/argocd/controller-data

# PVC for controller data
persistence:
  controller:
    enabled: true
    size: 10Gi
    storageClassName: local-path
    accessMode: ReadWriteOnce
