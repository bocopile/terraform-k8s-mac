# Fluent Bit 로그 수집 설정
# 목적: 모든 Pod 로그를 수집하여 SigNoz OTEL Collector로 전송

# 리소스 제한
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# 모든 노드에 배포 (로그 수집)
tolerations:
  - operator: Exists

# ServiceAccount 생성
serviceAccount:
  create: true
  name: fluent-bit

# Fluent Bit 설정 (ConfigMap)
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 5
        Log_Level info
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri, java, python, go
        Tag kube.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Refresh_Interval 5
        DB /var/fluent-bit/state/flb_kube.db
        DB.sync normal

  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube.var.log.containers.
        Merge_Log On
        Keep_Log On
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
        Labels On
        Annotations On
        Buffer_Size 32k

    [FILTER]
        Name modify
        Match kube.*
        Add k8s.cluster.name local-multipass
        Add deployment.environment production

    [FILTER]
        Name nest
        Match kube.*
        Operation lift
        Nested_under kubernetes
        Add_prefix k8s.

    [FILTER]
        Name grep
        Match kube.*
        Exclude k8s.namespace_name kube-system
        Exclude k8s.namespace_name kube-public
        Exclude k8s.namespace_name kube-node-lease

  outputs: |
    [OUTPUT]
        Name http
        Match kube.*
        Host signoz-otel-collector.observability.svc.cluster.local
        Port 4318
        URI /v1/logs
        Format json
        Json_date_key timestamp
        Json_date_format iso8601
        Retry_Limit 3
        tls Off
        tls.verify Off

  customParsers: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On

    [MULTILINE_PARSER]
        Name java
        Type regex
        Flush_timeout 1000
        # Java stack traces
        Rule "start_state" "/^(\d{4}-\d{2}-\d{2}|\w{3}\s+\d{1,2},\s+\d{4})/" "cont"
        Rule "cont" "/^[\s]+(at|\.{3}\s)/" "cont"
        Rule "cont" "/^Caused by:/" "cont"

    [MULTILINE_PARSER]
        Name python
        Type regex
        Flush_timeout 1000
        # Python stack traces
        Rule "start_state" "/^Traceback \(most recent call last\):$/" "cont"
        Rule "cont" "/^\s+File.*/" "cont"
        Rule "cont" "/^\s+.*/" "cont"
        Rule "cont" "/^[A-Z][a-zA-Z]+Error:.*/" "cont"

    [MULTILINE_PARSER]
        Name go
        Type regex
        Flush_timeout 1000
        # Go panic stack traces
        Rule "start_state" "/^panic:/" "cont"
        Rule "cont" "/^goroutine \d+/" "cont"
        Rule "cont" "/^\s+.*\.go:\d+/" "cont"

# 로그 레벨
logLevel: info

# 보안 설정
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  fsGroup: 10001
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# 모니터링
service:
  type: ClusterIP
  port: 2020
  labels:
    app: fluent-bit
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2020"
    prometheus.io/path: /api/v1/metrics/prometheus

# 고가용성 설정
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

# 헬스체크
livenessProbe:
  httpGet:
    path: /
    port: 2020
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: 2020
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
