global:
  clusterName: local-multipass
  clickhouse:
    enabled: true
    persistence:
      enabled: true
      size: 50Gi
      storageClass: local-path

otelCollector:
  gateway:
    enabled: true
    # High Availability: 다중 게이트웨이로 SPOF 제거
    replicas: 2
    # Security: SecurityContext 설정
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      fsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - otel-collector-gateway
              topologyKey: kubernetes.io/hostname
    service:
      type: ClusterIP
      ports:
        otlpGrpc: 4317
        otlpHttp: 4318
    config:
      receivers:
        otlp:
          protocols:
            grpc: {}
            http: {}
        prometheus:
          config:
            scrape_configs:
              # Kube-State-Metrics 스크래핑
              - job_name: 'kube-state-metrics'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['kube-state-metrics.observability.svc.cluster.local:8080']
                metric_relabel_configs:
                  # 불필요한 메트릭 제외
                  - source_labels: [__name__]
                    regex: 'kube_pod_container_status_.*_total'
                    action: drop
                  # 클러스터 이름 추가
                  - target_label: cluster
                    replacement: 'local-multipass'

              # Node Exporter 메트릭 (agent가 수집)
              - job_name: 'node-exporter'
                scrape_interval: 30s
                scrape_timeout: 10s
                kubernetes_sd_configs:
                  - role: endpoints
                    namespaces:
                      names:
                        - observability
                relabel_configs:
                  - source_labels: [__meta_kubernetes_service_name]
                    regex: 'node-exporter'
                    action: keep
                  - source_labels: [__meta_kubernetes_endpoint_port_name]
                    regex: 'metrics'
                    action: keep
                  - source_labels: [__meta_kubernetes_pod_node_name]
                    target_label: node
                metric_relabel_configs:
                  # 클러스터 이름 추가
                  - target_label: cluster
                    replacement: 'local-multipass'

              # Kubelet cAdvisor 메트릭
              - job_name: 'kubelet-cadvisor'
                scrape_interval: 30s
                scrape_timeout: 10s
                scheme: https
                tls_config:
                  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                kubernetes_sd_configs:
                  - role: node
                relabel_configs:
                  - action: labelmap
                    regex: __meta_kubernetes_node_label_(.+)
                  - target_label: __address__
                    replacement: kubernetes.default.svc:443
                  - source_labels: [__meta_kubernetes_node_name]
                    regex: (.+)
                    target_label: __metrics_path__
                    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
                metric_relabel_configs:
                  # 클러스터 이름 추가
                  - target_label: cluster
                    replacement: 'local-multipass'
                  # 컨테이너 메트릭만 유지
                  - source_labels: [__name__]
                    regex: 'container_(cpu|memory|network|fs)_.*'
                    action: keep

      processors:
        batch: {}
        resource:
          attributes:
            - key: cluster
              value: local-multipass
              action: upsert
      exporters:
        clickhouse:
          endpoint: tcp://signoz-clickhouse:9000?dial_timeout=10s&compress=true
          database: signoz
          ttl_days: 15
      service:
        pipelines:
          traces:
            receivers: [otlp]
            processors: [batch, resource]
            exporters: [clickhouse]
          metrics:
            receivers: [otlp, prometheus]
            processors: [batch, resource]
            exporters: [clickhouse]
          logs:
            receivers: [otlp]
            processors: [batch, resource]
            exporters: [clickhouse]

  agent:
    enabled: true
    # We primarily use Fluent Bit for logs; agent will scrape host/node/pod metrics if needed
    extraEnvs:
      - name: SIG_NOZ_CLUSTER
        value: local-multipass

frontend:
  # High Availability: 프론트엔드 복제본 증가
  replicas: 2
  # Security: SecurityContext 설정
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    fsGroup: 10001
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - frontend
            topologyKey: kubernetes.io/hostname
  service:
    type: ClusterIP

ingress:
  enabled: false  # we expose via Istio below

clickhouse:
  # High Availability: ClickHouse 클러스터 구성
  replicaCount: 2
  shards: 1
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: clickhouse
            topologyKey: kubernetes.io/hostname
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "2"
      memory: "4Gi"

# Data Persistence: 데이터 보존 정책
retentionPeriod:
  # 메트릭: 30일 보존 (모니터링 트렌드 분석)
  metrics: 30d
  # 트레이스: 15일 보존 (디버깅 및 성능 분석)
  traces: 15d
  # 로그: 30일 보존 (감사 및 트러블슈팅)
  logs: 30d

# ClickHouse 백업 설정 (권장)
clickhouse:
  backup:
    enabled: true
    # 백업 보존 기간
    retention: 7
    # 백업 스케줄 (매일 새벽 2시)
    schedule: "0 2 * * *"
